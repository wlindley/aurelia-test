{"version":3,"sources":["app.js","avatar-builder-category.js","avatar-builder.js","environment.js","friend-list.js","main.js","messages.js","no-selection.js","pluto-api.js","settings.js","utility.js","web-api.js","resources/index.js","settings/main.js","settings/speaker-setup.js","resources/elements/friend-card.js","resources/elements/loading-indicator.js","settings/microphone-setup.js"],"names":["App","inject","ea","plutoApi","username","subscribe","msg","init","configureRouter","config","router","title","map","route","moduleId","name","currentInstruction","AvatarBuilderCategory","api","items","activate","params","routeConfig","currentCategory","id","getAvatarBuilderCategory","then","category","categories","avatarBuilderCategories","index","indexOf","length","AvatarBuilder","defaultCategory","redirect","debug","testing","FriendList","friends","add","friend","remove","update","getUsers","users","push","indexof","splice","obj","find","f","Object","assign","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","ContactUpdated","contact","ContactViewed","FriendAdded","FriendRemoved","FriendUpdated","UserLoggedIn","NoSelection","message","profileImage","status","PlutoAPI","avatarBuilderCategorySizes","i","Math","floor","random","setTimeout","publish","setInterval","updateRandomUser","statuses","statusIndex","resolve","categoryName","toUpperCase","slice","toLowerCase","replace","result","numItems","imageUrl","getAudioConfig","speaker","microphone","Settings","areEqual","obj1","obj2","keys","every","key","hasOwnProperty","latency","getId","contacts","firstName","lastName","email","phoneNumber","WebAPI","isRequesting","getContactList","results","x","getContactDetails","found","filter","JSON","parse","stringify","saveContact","instance","globalResources","SettingsMain","speakerName","microphoneName","SpeakerSetup","playPercent","updateHandle","min","clearInterval","FriendCard","on","showFriends","nprogress","LoadingIndicator","defaultValue","loadingChanged","newValue","done","MicrophoneSetup","volumePercent","detached"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserLoggedIn} from './messages';\nimport {PlutoAPI} from './pluto-api';\n\nexport class App {\n    static inject() { return [EventAggregator, PlutoAPI]; }\n\n    constructor(ea, plutoApi) {\n        this.plutoApi = plutoApi;\n        this.username = \"\";\n        ea.subscribe(UserLoggedIn, msg => this.username = msg.username);\n        this.plutoApi.ea = ea;\n        this.plutoApi.init();\n    }\n\n    configureRouter(config, router) {\n        config.title = 'Pluto';\n        config.map([\n            {route: 'avatarBuilder', moduleId: 'avatar-builder', name: 'avatarBuilder'},\n            {route: 'settings', moduleId: 'settings', name: 'settings'},\n            {route: ['', 'friendList'], moduleId: 'friend-list', name: 'friendList'}\n        ]);\n        this.router = router;\n    }\n\n    get currentRoute() {\n        if (null === this.router.currentInstruction)\n            return 'friendList';\n        return this.router.currentInstruction.config.name;\n    }\n}\n","import {PlutoAPI} from './pluto-api';\n\nexport class AvatarBuilderCategory {\n    static inject() { return [PlutoAPI]; }\n\n    constructor(api) {\n        this.api = api;\n        this.title = '';\n        this.items = [];\n    }\n\n    activate(params, routeConfig) {\n        this.currentCategory = params.id;\n        return this.api.getAvatarBuilderCategory(params.id).then(category => {\n            this.title = category.title;\n            this.items = category.items;\n        });\n    }\n\n    get prevCategory() {\n        let categories = this.api.avatarBuilderCategories;\n        let index = categories.indexOf(this.currentCategory) - 1;\n        while (0 > index)\n            index += categories.length;\n        return categories[index];\n    }\n\n    get nextCategory() {\n        let categories = this.api.avatarBuilderCategories;\n        let index = categories.indexOf(this.currentCategory);\n        return categories[(index + 1) % categories.length];\n    }\n}","import {PlutoAPI} from './pluto-api';\n\nexport class AvatarBuilder {\n    static inject() { return [PlutoAPI]; }\n\n    constructor(api) {\n        this.api = api;\n    }\n\n    configureRouter(config, router) {\n        let defaultCategory = this.api.avatarBuilderCategories[0];\n        config.title = 'Avatar Builder';\n        config.map([\n            {route: '', redirect: 'category/' + defaultCategory},\n            {route: 'category/:id', moduleId: 'avatar-builder-category', name: 'avatarBuilderCategory'}\n        ]);\n        this.router = router;\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {PlutoAPI} from './pluto-api';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {FriendAdded, FriendRemoved, FriendUpdated} from './messages';\n\nexport class FriendList {\n    static inject() { return [EventAggregator, PlutoAPI]; }\n\n    constructor(ea, api) {\n        this.api = api;\n        this.friends = [];\n        ea.subscribe(FriendAdded, msg => this.add(msg.friend));\n        ea.subscribe(FriendRemoved, msg => this.remove(msg.friend));\n        ea.subscribe(FriendUpdated, msg => this.update(msg.friend));\n    }\n\n    activate(params, routeConfig) {\n        return this.api.getUsers().then(users => {\n            this.friends = users;\n        });\n    }\n\n    add(friend) {\n        if (-1 !== this.friends.indexOf(friend))\n            this.friends.push(friend);\n    }\n\n    remove(friend) {\n        let index = this.friends.indexof(friend);\n        if (-1 !== index)\n            this.friends.splice(index, 1);\n    }\n\n    update(friend) {\n        let obj = this.friends.find(f => friend.id === f.id);\n        Object.assign(obj, friend);\n    }\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class ContactUpdated {\n    constructor(contact) {\n        this.contact = contact;\n    }\n}\n\nexport class ContactViewed {\n    constructor(contact) {\n        this.contact = contact;\n    }\n}\n\nexport class FriendAdded {\n    constructor(friend) {\n        this.friend = friend;\n    }\n}\n\nexport class FriendRemoved {\n    constructor(friend) {\n        this.friend = friend;\n    }\n}\n\nexport class FriendUpdated {\n    constructor(friend) {\n        this.friend = friend;\n    }\n}\n\nexport class UserLoggedIn {\n    constructor(username) {\n        this.username = username;\n    }\n}","export class NoSelection {\n    constructor() {\n        this.message = \"\";\n    }\n}","import {UserLoggedIn, FriendAdded, FriendRemoved, FriendUpdated} from './messages';\n\nconst users = [\n    {\n        id: 1,\n        name: \"Walker Lindley\",\n        username: \"walker\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"online\"\n    },\n    {\n        id: 2,\n        name: \"Scott Rankin\",\n        username: \"scott\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"online\"\n    },\n    {\n        id: 3,\n        name: \"John Vechey\",\n        username: \"john\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"away\"\n    },\n    {\n        id: 4,\n        name: \"Forest Gibson\",\n        username: \"trees\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"away\"\n    },\n    {\n        id: 5,\n        name: \"Heather Henrichs\",\n        username: \"hhenrichs\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"offline\"\n    },\n    {\n        id: 6,\n        name: \"Andy Piro\",\n        username: \"johnvechey\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"online\"\n    }\n];\n\nexport class PlutoAPI {\n    constructor() {\n        this.ea = null;\n        this.avatarBuilderCategorySizes = [];\n        for (let i = 0; i < this.avatarBuilderCategories.length; i++) {\n            this.avatarBuilderCategorySizes.push(Math.floor((Math.random() * 5) + 8));\n        }\n    }\n\n    init() {\n        setTimeout(() => {\n            this.ea.publish(new UserLoggedIn(\"Walker Lindley\"));\n        }, 200);\n\n        setInterval(() => this.updateRandomUser(), 5000);\n    }\n\n    updateRandomUser() {\n        let index = Math.floor(Math.random() * users.length);\n        let statuses = [\"online\", \"away\", \"offline\"];\n        let statusIndex = Math.floor(Math.random() * statuses.length);\n        users[index].status = statuses[statusIndex];\n    }\n\n    getUsers() {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(users);\n            }, 200);\n        });\n    }\n\n    get avatarBuilderCategories() {\n        return ['skin-tone', 'face-shape', 'eyes', 'mouth', 'nose', 'ears', 'glasses', 'facial hair', 'hair'];\n    }\n\n    getAvatarBuilderCategory(categoryName) {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                let title = categoryName[0].toUpperCase() + categoryName.slice(1).toLowerCase().replace('-', ' ');\n                let result = {\n                    title: title,\n                    items: []\n                };\n                let index = this.avatarBuilderCategories.indexOf(categoryName);\n                let numItems = this.avatarBuilderCategorySizes[index];\n                for (let i = 0; i < numItems; i++) {\n                    result.items.push({\n                        imageUrl: \"http://lorempixel.com/100/100/people\"\n                    });\n                }\n                resolve(result);\n            }, 250);\n        });\n    }\n\n    getAudioConfig() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                let result = {\n                    speaker: \"Bluetooth audio device 4\",\n                    microphone: \"Default recording device\"\n                };\n                resolve(result);\n            }, 50);\n        });\n    }\n}","export class Settings {\n    static inject() { return []; }\n\n    constructor() {\n        \n    }\n\n    configureRouter(config, router) {\n        config.map([\n            {route: '', moduleId: 'settings/main', name: 'main'},\n            {route: 'speakerSetup', moduleId: 'settings/speaker-setup', name: 'speakerSetup'},\n            {route: 'microphoneSetup', moduleId: 'settings/microphone-setup', name: 'microphoneSetup'}\n        ]);\n        this.router = router;\n    }\n}","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet contacts = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phoneNumber:'867-5309'\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getContactList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = contacts.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getContactDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveContact(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = contacts.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = contacts.indexOf(found);\n          contacts[index] = instance;\n        }else{\n          instance.id = getId();\n          contacts.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","export function configure(config) {\n  config.globalResources(['./elements/loading-indicator', './elements/friend-card']);\n}\n","import {PlutoAPI} from '../pluto-api';\n\nexport class SettingsMain {\n    static inject() { return [PlutoAPI]; }\n\n    constructor(api) {\n        this.api = api;\n        this.speakerName = \"\";\n        this.microphoneName = \"\";\n    }\n\n    activate(params, routeConfig) {\n        return this.api.getAudioConfig().then(config => {\n            this.speakerName = config.speaker;\n            this.microphoneName = config.microphone;\n        });\n    }\n}","import {PlutoAPI} from '../pluto-api';\n\nexport class SpeakerSetup {\n    static inject() { return [PlutoAPI]; }\n\n    constructor(api) {\n        this.api = api;\n        this.speakerName = \"\";\n        this.playPercent = 0;\n    }\n\n    activate(params, routeConfig) {\n        return this.api.getAudioConfig().then(config => {\n            this.speakerName = config.speaker;\n            this.updateHandle = setInterval(() => this.update(), 50);\n        });\n    }\n\n    update() {\n        this.playPercent = Math.min(this.playPercent + 1, 100);\n        if (100 <= this.playPercent)\n            clearInterval(this.updateHandle);\n    }\n}","import {bindable, decorators, customElement} from 'aurelia-framework';\n\nexport let FriendCard = decorators(\n    customElement('friend-card'),\n    bindable('displayName'),\n    bindable('userId'),\n    bindable('status'),\n    bindable('profileImage'),\n    bindable('showFriends')\n).on(class {\n    get isVisible() {\n        if ('unavailable' === this.showFriends)\n            return 'offline' === this.status;\n        else\n            return 'offline' !== this.status;\n    }\n\n    get areButtonsVisible() {\n        return 'offline' !== this.status;\n    }\n});","import * as nprogress from 'nprogress';\nimport {bindable, noView, decorators} from 'aurelia-framework';\n\nexport let LoadingIndicator = decorators(\n    noView(['nprogress/nprogress.css']),\n    bindable({name: 'loading', defaultValue: false})\n).on(class {\n    loadingChanged(newValue) {\n        if (newValue) {\n            nprogress.start();\n        } else {\n            nprogress.done();\n        }\n    }\n});","import {PlutoAPI} from '../pluto-api';\n\nexport class MicrophoneSetup {\n    static inject() { return [PlutoAPI]; }\n\n    constructor(api) {\n        this.api = api;\n        this.microphoneName = \"\";\n        this.volumePercent = 0;\n    }\n\n    activate(params, routeConfig) {\n        return this.api.getAudioConfig().then(config => {\n            this.microphoneName = config.microphone;\n            this.updateHandle = setInterval(() => this.update(), 100);\n        });\n    }\n\n    detached() {\n        clearInterval(this.updateHandle);\n    }\n\n    update() {\n        this.volumePercent = Math.floor(Math.random() * 10) * 5 + 30;\n    }\n}"],"sourceRoot":"../src"}