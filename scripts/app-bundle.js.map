{"version":3,"sources":["app.js","avatar-builder-category.js","avatar-builder.js","contact-detail.js","contact-list.js","environment.js","friend-list.js","main.js","messages.js","no-selection.js","pluto-api.js","settings.js","utility.js","web-api.js","resources/index.js","resources/elements/friend-card.js","resources/elements/loading-indicator.js"],"names":["App","inject","ea","plutoApi","_currentState","username","subscribe","msg","init","configureRouter","config","router","title","map","route","moduleId","name","changeState","nextState","currentState","value","AvatarBuilderCategory","api","items","activate","params","routeConfig","currentCategory","id","getAvatarBuilderCategory","then","category","categories","avatarBuilderCategories","index","indexOf","length","AvatarBuilder","nav","created","navigateToRoute","ContactDetail","getContactDetails","contact","navModel","setTitle","firstName","originalContact","JSON","parse","stringify","publish","save","saveContact","canDeactivate","result","confirm","lastName","isRequesting","ContactList","contacts","select","found","find","x","Object","assign","getContactList","selectedId","debug","testing","FriendList","friends","add","friend","remove","update","getUsers","users","push","indexof","splice","obj","f","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","ContactUpdated","ContactViewed","FriendAdded","FriendRemoved","FriendUpdated","UserLoggedIn","NoSelection","message","profileImage","status","PlutoAPI","avatarBuilderCategorySizes","i","Math","floor","random","setTimeout","setInterval","updateRandomUser","statuses","statusIndex","resolve","categoryName","toUpperCase","slice","toLowerCase","replace","numItems","imageUrl","Settings","areEqual","obj1","obj2","keys","every","key","hasOwnProperty","latency","getId","email","phoneNumber","WebAPI","results","filter","instance","globalResources","FriendCard","on","showFriends","nprogress","LoadingIndicator","defaultValue","loadingChanged","newValue","done"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserLoggedIn} from './messages';\nimport {PlutoAPI} from './pluto-api';\n\nexport class App {\n    static inject() { return [EventAggregator, PlutoAPI]; }\n\n    constructor(ea, plutoApi) {\n        this._currentState = '';\n        this.plutoApi = plutoApi;\n        this.username = \"\";\n        ea.subscribe(UserLoggedIn, msg => this.username = msg.username);\n        this.plutoApi.ea = ea;\n        this.plutoApi.init();\n    }\n\n    configureRouter(config, router) {\n        config.title = 'Pluto';\n        config.map([\n            {route: 'avatarBuilder', moduleId: 'avatar-builder', name: 'avatarBuilder'},\n            {route: 'settings', moduleId: 'settings', name: 'settings'},\n            {route: ['', 'friendList'], moduleId: 'friend-list', name: 'friendList'}\n        ]);\n        this.router = router;\n    }\n\n    get currentState() {\n        return this._currentState;\n    }\n\n    set currentState(value) {\n        this._currentState = value;\n    }\n\n    changeState(nextState) {\n        this.currentState = nextState;\n        return true;\n    }\n}\n","import {PlutoAPI} from './pluto-api';\n\nexport class AvatarBuilderCategory {\n    static inject() { return [PlutoAPI]; }\n\n    constructor(api) {\n        this.api = api;\n        this.title = '';\n        this.items = [];\n    }\n\n    activate(params, routeConfig) {\n        this.currentCategory = params.id;\n        return this.api.getAvatarBuilderCategory(params.id).then(category => {\n            this.title = category.title;\n            this.items = category.items;\n        });\n    }\n\n    get prevCategory() {\n        let categories = this.api.avatarBuilderCategories;\n        let index = categories.indexOf(this.currentCategory) - 1;\n        while (0 > index)\n            index += categories.length;\n        return categories[index];\n    }\n\n    get nextCategory() {\n        let categories = this.api.avatarBuilderCategories;\n        let index = categories.indexOf(this.currentCategory);\n        return categories[(index + 1) % categories.length];\n    }\n}","import {PlutoAPI} from './pluto-api';\n\nexport class AvatarBuilder {\n    static inject() { return [PlutoAPI]; }\n\n    constructor(api) {\n        this.api = api;\n    }\n\n    configureRouter(config, router) {\n        config.title = 'Avatar Builder';\n        config.map([\n            {route: '', moduleId: 'no-selection', name: 'noSelection', nav: false},\n            {route: 'category/:id', moduleId: 'avatar-builder-category', name: 'avatarBuilderCategory', nav: false}\n        ]);\n        this.router = router;\n    }\n\n    created() {\n        this.router.navigateToRoute('avatarBuilderCategory', {id: this.api.avatarBuilderCategories[0]});\n    }\n}","import {EventAggregator} from 'aurelia-event-aggregator';\nimport {WebAPI} from './web-api';\nimport {areEqual} from './utility';\nimport {ContactUpdated, ContactViewed} from './messages';\n\nexport class ContactDetail {\n    static inject() { return [WebAPI, EventAggregator]; }\n\n    constructor(api, ea) {\n        this.api = api;\n        this.ea = ea;\n    }\n\n    activate(params, routeConfig) {\n        this.routeConfig = routeConfig;\n\n        return this.api.getContactDetails(params.id).then(contact => {\n            this.contact = contact;\n            this.routeConfig.navModel.setTitle(contact.firstName);\n            this.originalContact = JSON.parse(JSON.stringify(contact));\n            this.ea.publish(new ContactViewed(this.contact));\n        });\n    }\n\n    get canSave() {\n        return this.contact.firstName && this.contact.lastName && !this.api.isRequesting;\n    }\n\n    save() {\n        this.api.saveContact(this.contact).then(contact => {\n            this.contact = contact;\n            this.routeConfig.navModel.setTitle(contact.firstName);\n            this.originalContact = JSON.parse(JSON.stringify(contact));\n            this.ea.publish(new ContactUpdated(this.contact));\n        });\n    }\n\n    canDeactivate() {\n        if (!areEqual(this.originalContact, this.contact)) {\n            let result = confirm('You have unsaved changes. Are you sure you wish to leave?');\n            if (!result)\n                this.ea.publish(new ContactViewed(this.contact));\n            return result;\n        }\n        return true;\n    }\n}","import {WebAPI} from './web-api';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ContactUpdated, ContactViewed} from './messages';\n\nexport class ContactList {\n    static inject() { return [WebAPI, EventAggregator]; }\n\n    constructor(api, ea) {\n        this.api = api;\n        this.contacts = [];\n        ea.subscribe(ContactViewed, msg => this.select(msg.contact));\n        ea.subscribe(ContactUpdated, msg => {\n            let id = msg.contact.id;\n            let found = this.contacts.find(x => x.id === id);\n            Object.assign(found, msg.contact);\n        });\n    }\n\n    created() {\n        this.api.getContactList().then(contacts => this.contacts = contacts);\n    }\n\n    select(contact) {\n        this.selectedId = contact.id;\n        return true;\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {PlutoAPI} from './pluto-api';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {FriendAdded, FriendRemoved, FriendUpdated} from './messages';\n\nexport class FriendList {\n    static inject() { return [EventAggregator, PlutoAPI]; }\n\n    constructor(ea, api) {\n        this.api = api;\n        this.friends = [];\n        ea.subscribe(FriendAdded, msg => this.add(msg.friend));\n        ea.subscribe(FriendRemoved, msg => this.remove(msg.friend));\n        ea.subscribe(FriendUpdated, msg => this.update(msg.friend));\n    }\n\n    activate(params, routeConfig) {\n        return this.api.getUsers().then(users => {\n            this.friends = users;\n        });\n    }\n\n    add(friend) {\n        if (-1 !== this.friends.indexOf(friend))\n            this.friends.push(friend);\n    }\n\n    remove(friend) {\n        let index = this.friends.indexof(friend);\n        if (-1 !== index)\n            this.friends.splice(index, 1);\n    }\n\n    update(friend) {\n        let obj = this.friends.find(f => friend.id === f.id);\n        Object.assign(obj, friend);\n    }\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class ContactUpdated {\n    constructor(contact) {\n        this.contact = contact;\n    }\n}\n\nexport class ContactViewed {\n    constructor(contact) {\n        this.contact = contact;\n    }\n}\n\nexport class FriendAdded {\n    constructor(friend) {\n        this.friend = friend;\n    }\n}\n\nexport class FriendRemoved {\n    constructor(friend) {\n        this.friend = friend;\n    }\n}\n\nexport class FriendUpdated {\n    constructor(friend) {\n        this.friend = friend;\n    }\n}\n\nexport class UserLoggedIn {\n    constructor(username) {\n        this.username = username;\n    }\n}","export class NoSelection {\n    constructor() {\n        this.message = \"\";\n    }\n}","import {UserLoggedIn, FriendAdded, FriendRemoved, FriendUpdated} from './messages';\n\nconst users = [\n    {\n        id: 1,\n        name: \"Walker Lindley\",\n        username: \"walker\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"online\"\n    },\n    {\n        id: 2,\n        name: \"Scott Rankin\",\n        username: \"scott\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"online\"\n    },\n    {\n        id: 3,\n        name: \"John Vechey\",\n        username: \"john\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"away\"\n    },\n    {\n        id: 4,\n        name: \"Forest Gibson\",\n        username: \"trees\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"away\"\n    },\n    {\n        id: 5,\n        name: \"Heather Henrichs\",\n        username: \"hhenrichs\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"offline\"\n    },\n    {\n        id: 6,\n        name: \"Andy Piro\",\n        username: \"johnvechey\",\n        profileImage: \"http://lorempixel.com/200/200/people/\",\n        status: \"online\"\n    }\n];\n\nexport class PlutoAPI {\n    constructor() {\n        this.ea = null;\n        this.avatarBuilderCategorySizes = [];\n        for (let i = 0; i < this.avatarBuilderCategories.length; i++) {\n            this.avatarBuilderCategorySizes.push(Math.floor((Math.random() * 5) + 8));\n        }\n    }\n\n    init() {\n        setTimeout(() => {\n            this.ea.publish(new UserLoggedIn(\"Walker Lindley\"));\n        }, 200);\n\n        setInterval(() => this.updateRandomUser(), 5000);\n    }\n\n    updateRandomUser() {\n        let index = Math.floor(Math.random() * users.length);\n        let statuses = [\"online\", \"away\", \"offline\"];\n        let statusIndex = Math.floor(Math.random() * statuses.length);\n        users[index].status = statuses[statusIndex];\n    }\n\n    getUsers() {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(users);\n            }, 200);\n        });\n    }\n\n    get avatarBuilderCategories() {\n        return ['skin-tone', 'face-shape', 'eyes', 'mouth', 'nose', 'ears', 'glasses', 'facial hair', 'hair'];\n    }\n\n    getAvatarBuilderCategory(categoryName) {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                let title = categoryName[0].toUpperCase() + categoryName.slice(1).toLowerCase().replace('-', ' ');\n                let result = {\n                    title: title,\n                    items: []\n                };\n                let index = this.avatarBuilderCategories.indexOf(categoryName);\n                let numItems = this.avatarBuilderCategorySizes[index];\n                for (let i = 0; i < numItems; i++) {\n                    result.items.push({\n                        imageUrl: \"http://lorempixel.com/100/100/people\"\n                    });\n                }\n                resolve(result);\n            }, 250);\n        });\n    }\n}","export class Settings {\n    static inject() { return []; }\n\n    constructor() {\n        \n    }\n}","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet contacts = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phoneNumber:'867-5309'\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getContactList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = contacts.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getContactDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveContact(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = contacts.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = contacts.indexOf(found);\n          contacts[index] = instance;\n        }else{\n          instance.id = getId();\n          contacts.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","export function configure(config) {\n  config.globalResources(['./elements/loading-indicator', './elements/friend-card']);\n}\n","import {bindable, decorators, customElement} from 'aurelia-framework';\n\nexport let FriendCard = decorators(\n    customElement('friend-card'),\n    bindable('displayName'),\n    bindable('userId'),\n    bindable('status'),\n    bindable('profileImage'),\n    bindable('showFriends')\n).on(class {\n    get isVisible() {\n        if ('unavailable' === this.showFriends)\n            return 'offline' === this.status;\n        else\n            return 'offline' !== this.status;\n    }\n\n    get areButtonsVisible() {\n        return 'offline' !== this.status;\n    }\n});","import * as nprogress from 'nprogress';\nimport {bindable, noView, decorators} from 'aurelia-framework';\n\nexport let LoadingIndicator = decorators(\n    noView(['nprogress/nprogress.css']),\n    bindable({name: 'loading', defaultValue: false})\n).on(class {\n    loadingChanged(newValue) {\n        if (newValue) {\n            nprogress.start();\n        } else {\n            nprogress.done();\n        }\n    }\n});"],"sourceRoot":"../src"}